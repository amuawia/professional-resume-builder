name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Dependencies
      run: |
        cd frontend
        npm ci
        cd ../backend
        npm ci
    
    - name: Run Frontend Linting
      run: |
        cd frontend
        npm run lint
    
    - name: Run Backend Linting
      run: |
        cd backend
        npm run lint
    
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm test
    
    - name: Run Backend Tests
      run: |
        cd backend
        npm test
    
    - name: Build Frontend
      run: |
        cd frontend
        npm run build
    
    - name: Build Backend
      run: |
        cd backend
        npm run build

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker Containers
      run: docker-compose build
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Push to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker-compose push

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << EOF
          cd /path/to/professional-resume-builder
          docker-compose pull
          docker-compose up -d
        EOF